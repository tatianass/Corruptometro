#Treino do modelo
fitControl = trainControl(method="repeatedcv", number=10, repeats=10, returnResamp="all")
labels = as.factor(train$classe)
model = train(form = classe ~ nu_Aditivo_Valor + nu_Aditivos_Totais, data = train, trControl=fitControl, method="rf")
predictions = predict(model,newdata=test)
prob = predict(model,newdata=test,type = "prob")
caret::confusionMatrix(predictions, test$classe)
setwd("~/Corruptometro/scripts/R")
# Excutar script data.R
source("imports.R")
source("data.R")
# Apresentar os poss?veis n?veis de Classe
table(tre_sagres$classe)
# Parti??o de teste com os candidatos reeleitos
test_idx = which(tre_sagres$Candidato2016)
# Conjunto de treino e teste
test = tre_sagres[test_idx,]
train = tre_sagres[-test_idx,]
# Propor??o dos conjuntos de treino e teste
prop.table(table(train$classe))
prop.table(table(test$classe))
#Treino do modelo
fitControl = trainControl(method="repeatedcv", number=10, repeats=10, returnResamp="all")
labels = as.factor(train$classe)
model = train(form = classe ~ nu_Aditivo_Valor + nu_Aditivos_Totais, data = train, trControl=fitControl, method="rf")
predictions = predict(model,newdata=test)
prob = predict(model,newdata=test,type = "prob")
caret::confusionMatrix(predictions, test$classe)
table(tre_sagres$classe)
source("imports.R")
source("imports.R")
# Fun??o para modificar o ano.
# Gest?es entre 2009 e 2012 tem o ano modificado para 2009
# Gest?es entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
quantidadeEleitores = read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 = read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
View(contrato)
contratos <- subset(contrato, dt_Ano > 2008)
contratos
View(contratos)
source("imports.R")
# Fun??o para modificar o ano.
# Gest?es entre 2009 e 2012 tem o ano modificado para 2009
# Gest?es entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
View(contrato)
View(contrato)
View(contrato)
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length)
View(nu_Contratos)
View(nu_Contratos)
table(nu_Contratos$cd_UGestora)
table(nu_Contratos$cd_UGestora) < 2
nu_Contratos[table(nu_Contratos$cd_UGestora) < 2,]
source("imports.R")
# Fun??o para modificar o ano.
# Gest?es entre 2009 e 2012 tem o ano modificado para 2009
# Gest?es entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Conta o numero de contratos da prefeitura
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length)
length(unique(contrato$cd_UGestora))
View(candidadosEleicao2016)
View(contrato)
dispensa <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7))
View(dispensa)
nu_Dispensas <- aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, length)
colnames(nu_Dispensas)[3] <- "nu_Dispensas"
tre_sagres <- merge(tre_sagres, nu_Dispensas, all.x = T, by.x=c("cd_Ugestora","dt_Ano"), by.y = c("cd_UGestora","dt_Ano"))
tre_sagres$nu_Dispensas <- with(tre_sagres, ifelse(is.na(nu_Dispensas),0,nu_Dispensas))
View(tre_sagres)
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
View(tre_sagres)
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length)
dispensa <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7))
nu_Dispensas <- aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, length)
tre_sagres <- merge(tre_sagres, nu_Contratos, all.x = T, by.x=c("cd_Ugestora","dt_Ano"), by.y = c("cd_UGestora","dt_Ano"))
View(tre_sagres)
?mutate
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length) %>% select(nu_Contratos = nu_Contrato)
View(nu_Contratos)
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length) %>% rename(nu_Contratos = nu_Contrato)
View(nu_Contratos)
tre_sagres <- merge(tre_sagres, nu_Contratos, all.x = T, by.x=c("cd_Ugestora","dt_Ano"), by.y = c("cd_UGestora","dt_Ano"))
View(tre_sagres)
source("imports.R")
# Fun??o para modificar o ano.
# Gest?es entre 2009 e 2012 tem o ano modificado para 2009
# Gest?es entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Conta o numero de contratos da prefeitura
nu_Contratos <- aggregate(nu_Contrato ~ cd_UGestora + dt_Ano, contrato, length) %>% rename(nu_Contratos = nu_Contrato)
tre_sagres <- merge(tre_sagres, nu_Contratos, all.x = T, by.x=c("cd_Ugestora","dt_Ano"), by.y = c("cd_UGestora","dt_Ano"))
dispensa <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7))
nu_Dispensas <- aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, length) %>% rename(tp_Licitacao = nu_Dispensas)
nu_Dispensas <- aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, length) %>% rename(nu_Dispensas = tp_Licitacao)
View(nu_Dispensas)
View(nu_Dispensas)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>% aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, length) %>% rename(nu_Dispensas = tp_Licitacao)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>% aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, length)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>% aggregate(tp_Licitacao ~ cd_UGestora + dt_Ano, dispensa, FUN = length)
?group_by
by_cyl <- group_by(mtcars, cyl)
by_cyl
mtcars
by_cyl <- group_by(mtcars, cyl)
by_cyl
summarise(by_cyl, mean(disp), mean(hp))
?summarise
summarise(mtcars, mean(disp))
summarise(group_by(mtcars, cyl), mean(disp))
View(contrato)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora + dt_Ano) %>% length(tp_Licitacao)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora + dt_Ano)
View(nu_Dispensas)
nu_Dispensas <- subset(contrato, dt_Ano > tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora, dt_Ano) %>% length(tp_Licitacao)
nu_Dispensas <- subset(contrato, tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora, dt_Ano) %>% length(tp_Licitacao)
subset(contrato, tp_Licitacao %in% c(6, 7))
nu_Dispensas <- subset(contrato, tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora, dt_Ano)
View(nu_Dispensas)
nu_Dispensas <- subset(contrato, tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora, dt_Ano) %>% summarise(a = length(tp_Licitacao))
View(nu_Dispensas)
nu_Dispensas <- subset(contrato, tp_Licitacao %in% c(6, 7)) %>%
group_by(cd_UGestora, dt_Ano) %>% summarise(nu_Dispensas = length(tp_Licitacao))
View(tre_sagres)
tre_sagres <- merge(tre_sagres, nu_Dispensas, all.x = T, by.x=c("cd_Ugestora","dt_Ano"), by.y = c("cd_UGestora","dt_Ano"))
tre_sagres$nu_Dispensas <- with(tre_sagres, ifelse(is.na(nu_Dispensas),0,nu_Dispensas))
View(nu_Dispensas)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, Quantidade2009, Quantidade2013, DistanciaParaCapital)
View(quantidadeEleitores)
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, Quantidade2009, Quantidade2013, DistanciaParaCapital) %>%
mutate(Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
View(quantidadeEleitores)
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, Quantidade2009, Quantidade2013, DistanciaParaCapital) %>%
select(Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
View(quantidadeEleitores)
?mutate
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, Quantidade2009, Quantidade2013, DistanciaParaCapital) %>%
transmute(Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, Quantidade2009, Quantidade2013, DistanciaParaCapital) %>%
transmute(Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
View(quantidadeEleitores)
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
View(quantidadeEleitores)
View(quantidadeEleitores)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
View(quantidadeEleitores)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
View(quantidadeEleitores)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
source("imports.R")
# Funcao para modificar o ano.
# Gestoes entre 2009 e 2012 tem o ano modificado para 2009
# Gestoes entre 2013 e 2016 tem o ano modificado para 2013
relabel_ano <- function(x){
ifelse(x >= 2009 && x <2013, 2009, 2013)
}
# Carregar conjunto de dados
tre_sagres <- read.csv("../../data/TRE_Sagres_Resp_Eleito_Final.csv",header=T, encoding = "UTF-8")
ugestora <- read.csv('../../data/codigo_ugestora.csv', encoding = "UTF-8")
quantidadeEleitores <- read.csv("../../data/quantidadeEleitores.csv", encoding = "UTF-8")
candidadosEleicao2016 <- read.csv("../../data/Candidatos_eleicao_2016.csv", encoding = "UTF-8")
candidadosEleicao2016$Candidato2016 <- TRUE
aditivos <- read.csv("../../data/aditivos.csv", encoding = "UTF-8")
aditivos$dt_Ano <- with(aditivos, unlist(lapply(dt_Ano, relabel_ano)))
contrato <- read.csv('../../data/contratos.csv', encoding = "UTF-8")
contrato <- subset(contrato, dt_Ano > 2008)
contrato$dt_Ano <- with(contrato, unlist(lapply(dt_Ano, relabel_ano)))
# Adiciona coluna com os candidatos a eleição em 2016
tre_sagres <- merge(tre_sagres, candidadosEleicao2016, by.x = c("de_Ugestora","Eleito"), by.y = c("de_Ugestora","ELEITO"), all.x = T)
tre_sagres[is.na(tre_sagres)] <- FALSE
# Adiciona Quantidade de Eleitores por Municipio e Distancia da capital
quantidadeEleitores <- select(quantidadeEleitores, Abrangencia, DistanciaParaCapital, Media_Eleitores = (Quantidade2009 + Quantidade2013)/2)
tre_sagres <- merge(tre_sagres, quantidadeEleitores, by.x = c("de_Ugestora"), by.y = c("Abrangencia"), all.x = T)
View(tre_sagres)
